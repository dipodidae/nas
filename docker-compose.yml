networks:
  nas-network:
    driver: bridge

services:
  dockerproxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: dockerproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      - CONTAINERS=1
      - POST=0
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, curl, -fsS, 'http://localhost/_ping']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - TZ=${TZ:-UTC}
      - UMASK=022
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/sonarr:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/tv
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8989/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - UMASK=022
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/bazarr:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/movies
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/tv
      # Optional clean-subtitles project directory. If CLEAN_SUBTITLES_DIRECTORY is not set
      # we fall back to an innocuous tmp path so that `docker compose config` (CI) does not
      # fail with an empty host path (":/clean-subtitles"). Set CLEAN_SUBTITLES_DIRECTORY in
      # your .env to enable this mount, or leave it unset to effectively disable it.
      - ${CLEAN_SUBTITLES_DIRECTORY:-/tmp/clean-subtitles-disabled}:/clean-subtitles:ro
    ports:
      - 6767:6767
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:6767/']
      interval: 45s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHED_URL}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/jellyfin:/config
      - ${SHARE_DIRECTORY:-/tmp/share}:/data/movies
      - /tmp/jellyfin-cache:/cache:rw
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    networks:
      - nas-network
    restart: unless-stopped
    depends_on:
      - swag
    labels:
      - com.centurylinklabs.watchtower.enable=true
    tmpfs:
      - /tmp:size=4G,exec
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8096/System/Info/Public']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        reservations:
          cpus: '0.5'

  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    security_opt:
      - no-new-privileges:true
    depends_on:
      - dockerproxy
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - URL=${DOMAIN}
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=false
      - EMAIL=${ADMIN_EMAIL}
      - DOCKER_MODS=linuxserver/mods:swag-dashboard|linuxserver/mods:universal-docker|linuxserver/mods:swag-auto-proxy
      - DOCKER_HOST=dockerproxy
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/swag:/config
      - ./rootpage/dist:/config/www/rootpage:ro
      - ./rootpage/nginx-rootpage.conf:/config/nginx/site-confs/root.conf:ro
      - ./nginx-cache:/var/cache/nginx:rw
    ports:
      - 443:443
      - 80:80
      - 81:81
    restart: unless-stopped
    networks:
      - nas-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    labels:
      - com.centurylinklabs.watchtower.enable=true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [CMD, curl, -f, 'https://localhost:443', -k, -H, 'Host: ${DOMAIN}']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - qbittorrent
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:9696/']
      interval: 45s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - WEBUI_PORT=8080
      - QBITTORRENT_USER=${QBITTORRENT_USER}
      - QBITTORRENT_PASS=${QBITTORRENT_PASS}
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/qbittorrent:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8080/']
      interval: 60s
      timeout: 6s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 128M

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/timezone:/etc/timezone:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_SCHEDULE=${WATCHTOWER_SCHEDULE}
      - WATCHTOWER_TIMEOUT=300s
      - WATCHTOWER_NOTIFICATIONS=email
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${ADMIN_EMAIL}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${ADMIN_EMAIL}
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '3'
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, sh, -c, pgrep watchtower >/dev/null]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - UMASK=022
      - TZ=${TZ:-UTC}
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
    volumes:
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/movies
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
      - ${CONFIG_DIRECTORY:-/tmp/config}/radarr:/config
    ports:
      - 7878:7878/tcp
    depends_on:
      - prowlarr
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:7878/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - DOCKER_MODS=linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=curl
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/lazylibrarian:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
      - ${SHARE_DIRECTORY:-/tmp/share}/Books:/books
    ports:
      - 5299:5299
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:5299/']
      interval: 60s
      timeout: 6s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/nextcloud:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/NextcloudData:/data
      - ${SHARE_DIRECTORY:-/tmp/share}:/external/drive:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/external/movies:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/external/series:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Music:/external/music:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Books:/external/books:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/external/downloads:rw
    ports:
      - 8087:443
    restart: unless-stopped
    depends_on:
      - swag
    networks:
      - nas-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'https://localhost:443/status.php', -k]
      interval: 60s
      timeout: 8s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  cloudflare-ddns:
    image: favonia/cloudflare-ddns:latest
    container_name: cloudflare-ddns
    restart: unless-stopped
    network_mode: host
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=${DOMAIN}
      - PROXIED=false
      - TTL=300
      - IP6=false
      - UPDATE_CRON=@every 5m
      - DETECTION_TIMEOUT=10s
      - UPDATE_TIMEOUT=30s
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, sh, -c, 'pgrep ddns || exit 1']
      interval: 60s
      timeout: 10s
      retries: 3

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: always
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=15
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    network_mode: none
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, sh, -c, pgrep -f autoheal >/dev/null]
      interval: 60s
      timeout: 5s
      retries: 2
      start_period: 15s
