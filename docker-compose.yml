networks:
  media-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_icc: 'true'
      com.docker.network.bridge.enable_ip_masquerade: 'true'
      com.docker.network.bridge.host_binding_ipv4: 0.0.0.0
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1
  proxy-network:
    driver: bridge

services:
  dockerproxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: dockerproxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      - CONTAINERS=1
      - IMAGES=1
      - TASKS=1
      - SERVICES=1
      - POST=0
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, wget, --no-verbose, --tries=1, --spider, 'http://localhost:2375/version']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M

  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    security_opt:
      - no-new-privileges:true
    depends_on:
      - dockerproxy
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - VALIDATION=dns
      - DNSPLUGIN=cloudflare
      - CF_API_TOKEN=${CLOUDFLARE_API_TOKEN:-dummy-cloudflare-token}
      - URL=${DOMAIN:-example.com}
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=false
      - EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - DOCKER_MODS=linuxserver/mods:swag-dashboard|linuxserver/mods:universal-docker|linuxserver/mods:swag-auto-proxy
      - DOCKER_HOST=dockerproxy
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/swag:/config
      - ./rootpage/dist:/config/www/rootpage:ro
      - ./rootpage/nginx-rootpage.conf:/config/nginx/site-confs/root.conf:ro
      - ./nginx-cache:/var/cache/nginx:rw
    ports:
      - 443:443
      - 80:80
      - 81:81
    restart: unless-stopped
    networks:
      - proxy-network
      - media-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    labels:
      - com.centurylinklabs.watchtower.enable=true
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [CMD, curl, -f, 'https://localhost:443', -k, -H, 'Host: ${DOMAIN:-example.com}']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Media & automation stack (single media-network only)
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - UMASK=022
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/sonarr:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/tv
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    depends_on:
      - prowlarr
      - qbittorrent
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8989/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - UMASK=022
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/radarr:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/movies
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    depends_on:
      - prowlarr
      - qbittorrent
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:7878/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - UMASK=022
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/bazarr:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/movies
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/tv
      - ${CLEAN_SUBTITLES_DIRECTORY:-/tmp/clean-subtitles-disabled}:/clean-subtitles:ro
    ports:
      - 6767:6767
    restart: unless-stopped
    depends_on:
      - prowlarr
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:6767/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    depends_on:
      - qbittorrent
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:9696/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - WEBUI_PORT=8080
      - QBITTORRENT_USER=${QBITTORRENT_USER:-qbittorrent}
      - QBITTORRENT_PASS=${QBITTORRENT_PASS:-changeme_password}
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/qbittorrent:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
    ports:
      - 8080:8080
      - 6881:6881/tcp
      - 6881:6881/udp
    restart: unless-stopped
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8080/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 128M

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHED_URL:-http://localhost:8096}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/jellyfin:/config
      - ${SHARE_DIRECTORY:-/tmp/share}:/data/movies
      - ${JELLYFIN_CACHE_DIRECTORY:-/tmp/jellyfin-cache}:/cache:rw
    ports:
      - 8096:8096
      - 8920:8920
      - 7359:7359/udp
      - 1900:1900/udp
    networks:
      - media-network
    restart: unless-stopped
    depends_on:
      - swag
    labels:
      - com.centurylinklabs.watchtower.enable=true
    tmpfs:
      - /tmp:size=4G,exec
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:8096/System/Info/Public']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          cpus: '0.5'

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - OVERSEERR_URL=${OVERSEERR_PUBLISHED_URL}
      - LOG_LEVEL=info
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/overseerr:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    depends_on:
      - plex
      - sonarr
      - radarr
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:5055/api/v1/status']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 128M

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM:-}
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/plex:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/movies
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/tv
      - ${SHARE_DIRECTORY:-/tmp/share}/Music:/music
      - ${PLEX_TRANSCODE_DIRECTORY:-/tmp/plex-transcode}:/transcode
    ports:
      - 32400:32400
      - 8324:8324
      - 32469:32469
    restart: unless-stopped
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:32400/identity']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 4G
        reservations:
          cpus: '0.5'
          memory: 512M

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    security_opt:
      - no-new-privileges:true
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/nextcloud:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/NextcloudData:/data
      - ${SHARE_DIRECTORY:-/tmp/share}:/external/drive:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Movies:/external/movies:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Series:/external/series:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Music:/external/music:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Books:/external/books:rw
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/external/downloads:rw
    ports:
      - 8087:443
    restart: unless-stopped
    depends_on:
      - swag
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'https://localhost:443/status.php', -k]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - DOCKER_HOST=tcp://dockerproxy:2375
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_SCHEDULE=${WATCHTOWER_SCHEDULE:-0 0 4 * * *}
      - WATCHTOWER_TIMEOUT=300s
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATIONS:-email}
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${ADMIN_EMAIL:-admin@example.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=${ADMIN_EMAIL:-admin@example.com}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER:-}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT:-587}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER:-}
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASSWORD:-}
    depends_on:
      - dockerproxy
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
    healthcheck:
      test: [CMD, /watchtower, --health-check]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 20s
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256M

  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TZ:-UTC}
      - DOCKER_MODS=linuxserver/mods:universal-package-install
      - INSTALL_PACKAGES=curl
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_DIRECTORY:-/tmp/config}/lazylibrarian:/config
      - ${SHARE_DIRECTORY:-/tmp/share}/Downloads:/downloads
      - ${SHARE_DIRECTORY:-/tmp/share}/Books:/books
    ports:
      - 5299:5299
    restart: unless-stopped
    depends_on:
      - prowlarr
      - qbittorrent
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - swag=enable
    healthcheck:
      test: [CMD, curl, -f, 'http://localhost:5299/']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: '3'
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M

  autoheal:
    image: willfarrell/autoheal:latest
    container_name: autoheal
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      - DOCKER_SOCK=tcp://dockerproxy:2375
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=15
    depends_on:
      - dockerproxy
    networks:
      - media-network
    labels:
      - com.centurylinklabs.watchtower.enable=true
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 64M
