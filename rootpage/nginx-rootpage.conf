## Version 2025/09/02 - Root Domain Static Site Configuration
## This config serves the root domain (kartoffelschen.duckdns.org) with Vite build output
## while preserving subdomain reverse proxy functionality

# HTTP to HTTPS redirect for root domain only
# This ensures the root domain redirects to HTTPS while subdomains are handled by default.conf
server {
    listen 80;
    listen [::]:80;

    # Match ONLY the root domain (no subdomains)
    server_name kartoffelschen.duckdns.org;

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server block for root domain
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    # Match ONLY the root domain (no subdomains)
    server_name kartoffelschen.duckdns.org;

    # Include SSL configuration from SWAG
    include /config/nginx/ssl.conf;

    # Set document root to the mounted Vite build output
    root /config/www/rootpage;

    # Default files to serve (typical for SPAs)
    index index.html;

    # Security headers for static content
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;

    # Cache static assets (CSS, JS, images, fonts)
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # Cache for 1 year
        expires 1y;
        add_header Cache-Control "public, immutable";

        # Try to serve the file, fallback to 404
        try_files $uri =404;

        # Security headers for assets
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Handle API routes or other specific paths if needed
    # Uncomment and modify if your SPA has specific API endpoints
    # location /api/ {
    #     # Proxy to backend if needed, or return 404 for static sites
    #     return 404;
    # }

    # SPA-friendly routing: serve index.html for all unmatched routes
    # This is crucial for client-side routing (React Router, Vue Router, Angular Router)
    location / {
        # First try to serve the exact file
        # Then try as directory with index.html
        # Finally fallback to index.html for SPA routing
        try_files $uri $uri/ /index.html;

        # Prevent caching of index.html to ensure updates are reflected
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }
    }

    # Security: deny access to hidden files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: deny access to common sensitive files
    location ~* \.(env|log|htaccess|htpasswd|ini|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Optional: Custom error pages
    # error_page 404 /404.html;
    # error_page 500 502 503 504 /50x.html;
}
